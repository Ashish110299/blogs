// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for Blog documents */
type BlogDocumentData = Record<string, never>;
/**
 * Blog document from Prismic
 *
 * - **API ID**: `Blog`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<BlogDocumentData>, "Blog", Lang>;
/** Content for Footer documents */
type FooterDocumentData = Record<string, never>;
/**
 * Footer document from Prismic
 *
 * - **API ID**: `Footer`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FooterDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<FooterDocumentData>, "Footer", Lang>;
/** Content for Header documents */
interface HeaderDocumentData {
    /**
     * Logo field in *Header*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: header.Logo
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    Logo: prismicT.ImageField<never>;
    /**
     * Site Name field in *Header*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: header.SiteName
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    SiteName: prismicT.RichTextField;
    /**
     * Navigation field in *Header*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: header.Navigation[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/group
     *
     */
    Navigation: prismicT.GroupField<Simplify<HeaderDocumentDataNavigationItem>>;
    /**
     * Button Text field in *Header*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: header.ButtonText
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    ButtonText: prismicT.KeyTextField;
    /**
     * Button Link field in *Header*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: header.ButtonLink
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    ButtonLink: prismicT.LinkField;
}
/**
 * Item in Header → Navigation
 *
 */
export interface HeaderDocumentDataNavigationItem {
    /**
     * Menu Name field in *Header → Navigation*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: header.Navigation[].MenuName
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    MenuName: prismicT.KeyTextField;
    /**
     * Menu Link field in *Header → Navigation*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: header.Navigation[].MenuLink
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    MenuLink: prismicT.LinkField;
}
/**
 * Header document from Prismic
 *
 * - **API ID**: `header`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HeaderDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HeaderDocumentData>, "header", Lang>;
/** Content for Page documents */
type PageDocumentData = Record<string, never>;
/**
 * Page document from Prismic
 *
 * - **API ID**: `Page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<PageDocumentData>, "Page", Lang>;
export type AllDocumentTypes = BlogDocument | FooterDocument | HeaderDocument | PageDocument;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { BlogDocumentData, BlogDocument, FooterDocumentData, FooterDocument, HeaderDocumentData, HeaderDocumentDataNavigationItem, HeaderDocument, PageDocumentData, PageDocument, AllDocumentTypes };
    }
}
